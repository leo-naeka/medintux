
 /********************************* CSesam_API_InfoGroupe.cpp *********************
 \file CSesam_API_InfoGroupe.cpp
 \brief (put some short descripion here).

 ********************************** CSesam_API_InfoGroupe.cpp *********************
 *  #include "CSesam_API_InfoGroupe.h"                                            *
 * ...............................................................................*
 *   Project   :  MedinTux  (typographie made in france)                          *
 *   Copyright : (C) 2004-2005-2006-2007-2008-2009-2010 and for the eternity      *
 *   by        :  Sevin Roland     from   MedinTux project                        *
 *   E-Mail    : roland-sevin@medintux.org                                        *
 *   Web site  : www.medintux.org                                                 *
 * ...............................................................................*
 *                                                                                *
 *   This program is free software; you can redistribute it and/or modify         *
 *   it under the terms of the CeCILL Version 1 du 21/06/2004                     *
 *   License (GPL compatible)                                                     *
 *                              http://www.cecill.info/                           *
 *   as published by :                                                            *
 *                                                                                *
 *   Commissariat a l'Energie Atomique                                            *
 *   - CEA,                                                                       *
 *                            31-33 rue de la Federation, 75752 PARIS cedex 15.   *
 *                            FRANCE                                              *
 *   Centre National de la Recherche Scientifique                                 *
 *   - CNRS,                                                                      *
 *                            3 rue Michel-Ange, 75794 Paris cedex 16.            *
 *                            FRANCE                                              *
 *   Institut National de Recherche en Informatique et en Automatique             *
 *   - INRIA,                                                                     *
 *                            Domaine de Voluceau, Rocquencourt, BP 105, 78153    *
 *                            FRANCE                                              *
 *                                                                                *
 *         This program is distributed in the hope that it will be useful,        *
 *         but WITHOUT ANY WARRANTY; without even the implied warranty of         *
 *         MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                   *
 *         CeCILL  License (GPL compatible) for more details.                     *
 *                                                                                *
 **********************************************************************************/

#include "CSesam_API_InfoGroupe.h"

//------------------------------------------ CSesam_API_InfoGroupe ---------------------------------------------------------
CSesam_API_InfoGroupe::CSesam_API_InfoGroupe()
{
}

//------------------------------------------ NumGroupeToString ---------------------------------------------------------
// zip:/home/ro/Documents/DataMedicalDesign/sesam-vitale/doc_FSV_1.40.3.2.zip/ssv-mp-003api_ssv_4.03doc_prog-fra-mai_05.pdf
QString        CSesam_API_InfoGroupe::NumGroupeToString(int groupe, int champ)
{
 switch (groupe)
{ //.................... Lire Carte Pratricien ........................................................
  case 1:    {switch (champ)
                 {case -1 : return TR("Titulaire carte PS");
                  case  1 : return TR("Type de carte PS");
                  case  2 : return TR("Type d'identification nationale");
                  case  3 : return TR("N¬∞ d'identification nationale");
                  case  4 : return TR("Cl√© du n¬∞ d'identification nationale");
                  case  5 : return TR("Code civilit√©");
                  case  6 : return TR("Nom du PS");
                  case  7 : return TR("Pr√©nom du PS");
                  default : return messageChampInconnu( groupe, champ);
                 }
             }
  case 2:    {switch (champ)
                 {case -1 :  return TR("Situation du PS");
                  case  1 :  return TR("N¬∞ logique de la situation de facturation du PS");
                  case  2 :  return TR("Mode d'exercice (Lib√©ral, salari√©, remplacement, etc..)");
                  case  3 :  return TR("Statut d'exercice");
                  case  4 :  return TR("secteur d'activit√©");
                  case  5 :  return TR("Type d'identification structure");
                  case  6 :  return TR("N¬∞ d'identification structure");
                  case  7 :  return TR("Cl√© du N¬∞ d'identification structure");
                  case  8 :  return TR("Raison sociale structure");
                  case  9 :  return TR("N¬∞ d'identification de facturation du PS");
                  case  10 : return TR("Cl√© du N¬∞ d'identification de facturation du PS");
                  case  11 : return TR("N¬∞ d'identification du PS rempla√ßant");
                  case  12 : return TR("Cl√© du N¬∞ d'identification du PS rempla√ßant");
                  case  13 : return TR("Code conventionnel");
                  case  14 : return TR("Code sp√©cialit√©");
                  case  15 : return TR("Code zone tarifaire");
                  case  16 : return TR("Code zone IK");
                  case  17 : return TR("Code agr√©ment 1");
                  case  18 : return TR("Code agr√©ment 2");
                  case  19 : return TR("Code agr√©ment 3");
                  case  20 : return TR("Habilitation √  signer une facture");
                  case  21 : return TR("Habilitation √  signer un lot");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  //.................... Lire Vitale ........................................................
  case 40:   {switch (champ)                                                        // 1.31
                 {case -1 :  return TR("Donn√©es Carte Vitale et Assur√©");
                  case  1 :  return TR("Type de carte Vitale");
                  case  2 :  return TR("N¬∞ de s√©rie de la carte Vitale");
                  case  3 :  return TR("Type d'identification du porteur de la carte (assur√©, ou ayant droit)");
                  case  4 :  return TR("N¬∞ national d'immatriculation : NIR");
                  case  5 :  return TR("Cl√© du NIR");
                  case  6 :  return TR("Code r√©gime");
                  case  7 :  return TR("Caisse gestionnaire");
                  case  8 :  return TR("Centre gestionnaire");
                  case  9 :  return TR("Code gestion");
                  default :  return messageChampInconnu( groupe, champ);
                 }
             }
  case 41:   {switch (champ)
                 {case -1 :  return TR("Donn√©es B√©n√©ficiaire et p√©riodes de droits");             // 1.31
                  case  1 :  return TR("Nom usuel du b√©n√©ficiaire");
                  case  2 :  return TR("Nom patronymique du b√©n√©ficiaire");
                  case  3 :  return TR("Pr√©nom du b√©n√©ficiaire");
                  case  4 :  return TR("Adresse");
                  case  5 :  return TR("Date de naissance du b√©n√©ficiaire");
                  case  6 :  return TR("Rang de naissance");
                  case  7 :  return TR("Qualit√© (lien de parent√©)");
                  case  8 :  return TR("Identification Mutuelle");
                  case  9 :  return TR("Garanties effectives");
                  case  10 : return TR("Nombre de p√©riodes de droits AMO");
                  case  11 : return TR("Date de d√©but des droits AMO");
                  case  12 : return TR("Date de fin des droits AMO");
                  case  13 : return TR("Nombre de p√©riodes de droits Mutuelle");
                  case  14 : return TR("Date de d√©but des droits Mutuelle");
                  case  15 : return TR("Date de fin des droits Mutuelle");
                  case  16 : return TR("Nombre de p√©riodes de code couverture");
                  case  17 : return TR("Date de d√©but code couverture");
                  case  18 : return TR("Date de fin code couverture");
                  case  19 : return TR("Code ALD");
                  case  20 : return TR("Code situation");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 101:  {switch (champ)
                 {case -1 :  return TR("Donn√©es Assur√© (1 occurence)");
                  case  1 :  return TR("Type de carte Vitale");
                  case  2 :  return TR("N¬∞ de s√©rie de la carte Vitale");
                  case  3 :  return TR("Date de fin de validit√© de la carte Vitale");
                  case  4 :  return TR("Donn√©es administration carte RUF1");
                  case  5 :  return TR("Donn√©es administration carte RUF2");
                  case  6 :  return TR("Donn√©es RUF administration");
                  case  7 :  return TR("Type d'identification du porteur de carte (assur√© ou ayant droit)");
                  case  8 :  return TR("N¬∞ national d'immatriculation : NIR");
                  case  9 :  return TR("Cl√© du NIR");
                  case  10 : return TR("Code r√©gime");
                  case  11 : return TR("Caisse gestionnaire");
                  case  12 : return TR("Centre gestionnaire");
                  case  13 : return TR("Code gestion");
                  case  14 : return TR("Donn√©es RUF Famille");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 102:  {switch (champ)
                 {case -1 :  return TR("Service AMO Famille (0 √  1 occurence)");
                  case  1 :  return TR("Code service AMO Famille");
                  case  2 :  return TR("Date de d√©but du service AMO Famille");
                  case  3 :  return TR("Date de fin du service AMO Famille");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 103:  {switch (champ)
                 {case -1 :  return TR("Donn√©es Accident du Travail (0 √  1 occurence)");
                  case  1 :  return TR("Organisme gestionnaire du risque AT");                                             // AT 0
                  case  2 :  return TR("Code AT BGDH (ce champ est non renseign√© pour la premi√®re occurrence)");
                  case  3 :  return TR("Identifiant AT (ce champ est non renseign√© pour la premi√®re occurrence)");
                  case  4 :  return TR("Organisme gestionnaire AT1");                                                      // AT 1
                  case  5 :  return TR("Code AT1 BGDH (Code Budget Global Des H√¥pitaux)");
                  case  6 :  return TR("Identifiant AT1");
                  case  7 :  return TR("Organisme gestionnaire AT2)");                                                     // AT 2
                  case  8 :  return TR("Code AT2 BGDH (Code Budget Global Des H√¥pitaux)");
                  case  9 :  return TR("Identifiant AT2");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 104:  {switch (champ)
                 {case -1 :  return TR("Donn√©es B√©n√©ficiaire (1 √  6 occurences)");
                  case  1 :  return TR("Nom usuel du b√©n√©ficiaire");
                  case  2 :  return TR("Nom patronymique du b√©n√©ficiaire");
                  case  3 :  return TR("Pr√©nom du b√©n√©ficiaire");
                  case  4 :  return TR("Adresse ligne 1 (chez..., N¬∞ appt, ou de bo√Æte √  lettres, escalier, couloir, √©tage)");
                  case  5 :  return TR("Adresse ligne 2 (r√©sidence, b√¢timent, immeuble, tour, entr√©e)");
                  case  6 :  return TR("Adresse ligne 3 (N¬∞ et libell√© de la voie)");
                  case  7 :  return TR("Adresse ligne 4 (Lieu-dit ou service particulier de distribution)");
                  case  8 :  return TR("Adresse ligne 5 (code postal et localit√©)");
                  case  9 :  return TR("NIR certifi√©");
                  case  10 : return TR("Cl√© du NIR certifi√©");
                  case  11 : return TR("Date de certification du NIR");
                  case  12 : return TR("Date de naissance du b√©n√©ficiaire");
                  case  13 : return TR("Rang de naissance du b√©n√©ficiaire");
                  case  14 : return TR("Qualit√© (lien de parent√© entre l'ayant-droit et l'assur√©)");
                  case  15 : return TR("Code service AMO b√©n√©ficiaire (00 Pas de service sinon CMU G√©r√©e par 01-AMO 02-AMC-AMO 03-AMC 10-Sortant)");
                  case  16 : return TR("Date de d√©but de service AMO b√©n√©ficiaire");
                  case  17 : return TR("Date de fin de service AMO b√©n√©ficiaire");
                  case  18 : return TR("Donn√©es RUF AMO b√©n√©ficiaire");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 105:  {switch (champ)
                 {case -1 :  return TR("P√©riode de droits AMO (0 √  3 occurences)");
                  case  1 :  return TR("Date de d√©but droits AMO");
                  case  2 :  return TR("Date de fin droits AMO");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 106:  {switch (champ)
                 {case -1 :  return TR("P√©riode de code couverture (0 √  7 occurences)");
                  case  1 :  return TR("Date de d√©but code couverture");
                  case  2 :  return TR("Date de fin code couverture");
                  case  3 :  return TR("Code ALD");
                  case  4 :  return TR("Code situation");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 107:  {switch (champ)
                 {case -1 :  return TR("Donn√©es Mutuelle (0 √  1 occurence)");
                  case  1 :  return TR("Identification mutuelle");
                  case  2 :  return TR("Garanties effectives");
                  case  3 :  return TR("Indicateur de traitement mutuelle");
                  case  4 :  return TR("Type de services associ√©s");
                  case  5 :  return TR("Services associ√©s au contrat");
                  case  6 :  return TR("Code aiguillage STS");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 108:  {switch (champ)
                 {case -1 :  return TR("P√©riode de droits Mutuelle (0 √  3 occurences par b√©n√©ficiaire)");
                  case  1 :  return TR("Date de d√©but droits Mutuelle");
                  case  2 :  return TR("Date de fin droits Mutuelle");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 109:  {switch (champ)
                 {case -1 :  return TR("Donn√©es de la Compl√©mentaire de sant√© (0 √  1 occurence par b√©n√©ficiaire)");
                  case  1 :  return TR("Num√©ro compl√©mentaire B2");
                  case  2 :  return TR("Num√©ro compl√©mentaire EDI");
                  case  3 :  return TR("Num√©ro d'adh√©rent AMC");
                  case  4 :  return TR("Indicateur de traitement AMC (service accept√© par AMC : Tiers payant, CMU, DRE etc..)");
                  case  5 :  return TR("Date de d√©but de validit√© de pr√©sence des donn√©es AMC");
                  case  6 :  return TR("Date de fin de validit√© de pr√©sence des donn√©es AMC");
                  case  7 :  return TR("Code de routage AMC");
                  case  8 :  return TR("Identifiant d'h√¥te");
                  case  9 :  return TR("Nom de domaine AMC");
                  case  10 : return TR("Code aiguillage STS");
                  case  11 : return TR("Type de services associ√©s");
                  case  12 : return TR("Services associ√©s au contrat");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 111:  {switch (champ)
                 {case -1 :  return TR("Zone Commune (0 √  1 occurence par b√©n√©ficiaire)");
                  case  1 :  return TR("Zone commune compl√©mentaire (RUF b√©n√©ficiaire)");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 60:   {switch (champ)
                 {case -1 :  return TR("En-t√™te de configuration");
                  case  1 :  return TR("N¬∞ de version du SSV");
                  case  2 :  return TR("N¬∞ de version du GALSS");
                  case  3 :  return TR("N¬∞ de version du PSS");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 61:   {switch (champ)
                 {case -1 :  return TR("Configuration lecteur");
                  case  1 :  return TR("Nom du constructeur du lecteur");
                  case  2 :  return TR("Type du lecteur");
                  case  3 :  return TR("N¬∞ de s√©rie du lecteur");
                  case  4 :  return TR("OS du lecteur");
                  case  5 :  return TR("Nombre de logiciel du lecteur");
                  case  6 :  return TR("Nom du logiciel du lecteur");
                  case  7 :  return TR("N¬∞ de version du logiciel du lecteur");
                  case  8 :  return TR("Date et heure du lecteur");
                  case  9 :  return TR("Checksum du logiciel du lecteur");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 62:   {switch (champ)
                 {case -1 :  return TR("Composant SSV");
                  case  1 :  return TR("N¬∞ de version de la biblioth√®que des SSV");
                  case  2 :  return TR("Libell√© du fichier des tables des SSV");
                  case  3 :  return TR("N¬∞ de version du fichier des tables des SSV");
                  case  4 :  return TR("Nombre des fichiers contenant des tables d'organisme destinataire");
                  case  5 :  return TR("Code r√©gime des organismes destinataires contenus dans le fichier");
                  case  6 :  return TR("N¬∞ version (RUF)");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 63:   {switch (champ)
                 {case -1 :  return TR("Composant GALSS");
                  case  1 :  return TR("N¬∞ de version de la biblioth√®que des fonctions du GALSS");
                  case  2 :  return TR("N¬∞ de version du serveur des fonctions du GALSS");
                  case  3 :  return TR("N¬∞ de version du client des fonctions du GALSS");
                  case  4 :  return TR("N¬∞ de version de la biblioth√®que de gestion du fichier de configuration du GALSS");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
 case 64:    {switch (champ)
                 {case -1 :  return TR("Composant SESAM-Vitale");
                  case  1 :  return TR("Identifiant du composant pour le suivi de parc");
                  case  2 :  return TR("Libell√© descriptif du composant");
                  case  3 :  return TR("N¬∞ de version du composant");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1110: {switch (champ)
                 {case -1 :  return TR("Groupe Identification facture");
                  case  1 :  return TR("N¬∞ de facture");
                  case  2 :  return TR("Nature d'op√©ration");
                  case  3 :  return TR("Date d'√©laboration de la facture");
                  case  4 :  return TR("N¬∞ logique de la situation de facturation du PS");
                  case  5 :  return TR("N¬∞ de facture rectifi√©");
                  case  6 :  return TR("Date d'√©laboration de la facture rectifi√©e");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1120: {switch (champ)
                 {case -1 :  return TR("Groupe Identification du Professionnel de sant√©");
                  case  1 :  return TR("N¬∞ d'identification de facturation du Professionnel de sant√©");
                  case  2 :  return TR("Cl√© du N¬∞ d'identification de facturation du Professionnel de sant√©");
                  case  3 :  return TR("Nom du Professionnel de sant√©");
                  case  4 :  return TR("Pr√©nom du Professionnel de sant√©");
                  case  5 :  return TR("Code conventionnel sous lequel exerce le Professionnel de sant√©");
                  case  6 :  return TR("Code sp√©cialit√©");
                  case  7 :  return TR("Code zone tarifaire");
                  case  8 :  return TR("Code Zone IK");
                  case  9 :  return TR("Code agr√©ment 1");
                  case  10:  return TR("Code agr√©ment 2");
                  case  11:  return TR("Code agr√©ment 3");
                  case  12:  return TR("Conditions d'exercice (Lib√©ral L  Salari√© S)");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1130: {switch (champ)
                 {case -1 :  return TR("Groupe Identification du b√©n√©ficiaire");
                  case  1 :  return TR("Type d'identification du b√©n√©ficiaire");
                  case  2 :  return TR("N¬∞ National d'immatriculation NIR");
                  case  3 :  return TR("Cl√© du NIR");
                  case  4 :  return TR("Date de naissance du b√©n√©ficiaire");
                  case  5 :  return TR("Rang de naissance du b√©n√©ficiaire");
                  case  6 :  return TR("Qualit√©");
                  case  7 :  return TR("Code couverture code ALD Code situation (optionnel en non s√©curis√©)");
                  case  8 :  return TR("Code de pr√©sentation du carnet M√©dical");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1140: {switch (champ)
                 {case -1 :  return TR("Groupe Identification Structure");
                  case  1 :  return TR("Type d'identification de Structure");
                  case  2 :  return TR("N¬∞ Identification de structure dans laquelle le professionnel de sant√© exerce");
                  case  3 :  return TR("Cl√© du N¬∞ Identification de structure");
                  case  4 :  return TR("Nom de la structure");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1150: {switch (champ)
                 {case -1 :  return TR("Groupe Identification Rempla√ßant");
                  case  1 :  return TR("N¬∞ d'identification de facturation du Professionnel de sant√© Rempla√ßant");
                  case  2 :  return TR("Cl√© du N¬∞ d'identification de facturation");
                  case  3 :  return TR("Nom du Professionnel de sant√© Rempla√ßant");
                  case  4 :  return TR("Pr√©nom du Professionnel de sant√© Rempla√ßant");
                  case  5 :  return TR("Indicateur de signature (facture √©labor√©e par un rempla√ßant ou sous sa responsabilit√©) ");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1160: {switch (champ)
                 {case -1 :  return TR("Groupe Identification Individu");
                  case  1 :  return TR("N¬∞ national d'immatriculation individu");
                  case  2 :  return TR("Cl√© du N¬∞ national d'immatriculation individu");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1220: {switch (champ)
                 {case -1 :  return TR("Groupe Arr√™t de travail prescrit");
                  case  1 :  return TR("Nombre de jours d'arr√™t de travail prescrit");
                  case  2 :  return TR("Date de fin d'arr√™t de travail");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1310: {switch (champ)
                 {case -1 :  return TR("Groupe Organismes AMO (obligatoire)");
                  case  1 :  return TR("Code r√©gime");
                  case  2 :  return TR("Caisse gestionnaire");
                  case  3 :  return TR("Centre gestionnaire");
                  case  4 :  return TR("Code organisme destinataire");
                  case  5 :  return TR("Code centre informatique");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  case 1321: {switch (champ)
                 {case -1 :  return TR("Groupe Organismes AMC (compl√©mentaire)");
                  case  1 :  return TR("Type de contrat");
                  case  2 :  return TR("N¬∞ organisme compl√©mentaire (carte vitale ou autre support)");
                  case  3 :  return TR("N¬∞ d'adh√©rent √  un organisme compl√©mentaire");
                  case  4 :  return TR("Don√©es AMC Zone 1");
                  case  5 :  return TR("Don√©es AMC Zone 2");
                  case  6 :  return TR("N¬∞ organisme compl√©mentaire EDI (carte vitale ou autre support)");
                  case  7 :  return TR("Code application (99 ou 98)");
                  case  8 :  return TR("Code de routage flux AMC (carte vitale table conversion ou autre support)");
                  case  9 :  return TR("Domaine (carte vitale table conversion ou autre support)");
                  case  10:  return TR("Indicateur de traitement AMC(carte vitale ou autre support) ");
                  case  11:  return TR("Identifiant hote gestionnaire (carte vitale table conversion ou autre support)");
                  case  12:  return TR("Identifiant de l'assur√© AMC (carte vitale ou autre support AMC)");
                  case  13:  return TR("Zone suppl√©mentaire non certifi√©e (Certifi√©e ou non certifi√©e si type de contrat 99");
                  default  : return messageChampInconnu( groupe, champ);
                 }
             }
  default: return TR("groupe inconnu : ")  + QString::number(groupe);
 }
}
//--------------------------------------------- messageChampInconnu -------------------------------------------
QString        CSesam_API_InfoGroupe::messageChampInconnu(int groupe, int champ)
{ return TR("code champ inconnu : ") + QString::number(champ) + TR(" pour ce groupe : ") + QString::number(groupe);
}

