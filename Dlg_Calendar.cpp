/****************************************************************************
** Form implementation generated from reading ui file '../../MedinTuxTools/Calendar/Dlg_Calendar.ui'
**
** Created: mer. mai 4 22:19:14 2011
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "Dlg_Calendar.h"

#include <qvariant.h>
#include <qdatetime.h>
#include <qmessagebox.h>
#include <../../MedinTuxTools/CMaskedLineEdit.h>
#include <qpushbutton.h>
#include <qcombobox.h>
#include <qlabel.h>
#include <qdatetimeedit.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

#include "../../../MedinTuxTools/Calendar/Dlg_Calendar.ui.h"
static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x3e, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0xd3, 0xbf, 0x4b, 0x02,
    0x61, 0x18, 0xc0, 0xf1, 0xaf, 0xe2, 0xf0, 0x04, 0x06, 0x77, 0xe0, 0x70,
    0x07, 0x0e, 0x39, 0x04, 0x39, 0x34, 0x38, 0x26, 0xb4, 0x34, 0x16, 0x0d,
    0xd9, 0xd8, 0x96, 0x34, 0xc4, 0xfd, 0x07, 0xe1, 0x14, 0x87, 0x53, 0xd6,
    0x52, 0x4b, 0xd1, 0xda, 0x12, 0x4e, 0x82, 0x6b, 0x9b, 0x2d, 0x81, 0x43,
    0xa1, 0x8b, 0x60, 0x90, 0x70, 0xb7, 0xdd, 0x3b, 0x08, 0xbe, 0x9b, 0x0d,
    0x17, 0x61, 0xdd, 0xe5, 0x19, 0xbe, 0xcb, 0xfb, 0x3e, 0x0f, 0x3c, 0x1f,
    0x9e, 0xf7, 0x57, 0xaa, 0xf3, 0xdc, 0x61, 0x99, 0x91, 0x99, 0x0d, 0xdc,
    0xba, 0x3b, 0xb5, 0x2d, 0x9b, 0xde, 0x6b, 0x8f, 0xc6, 0x55, 0x23, 0xb5,
    0x08, 0x90, 0x9e, 0x0d, 0x3c, 0xcf, 0xc3, 0xb2, 0x2c, 0xaa, 0xc7, 0x55,
    0xdc, 0x73, 0x77, 0xfa, 0x7f, 0x40, 0xdd, 0x63, 0xae, 0x9a, 0x98, 0x39,
    0x13, 0xe7, 0xd4, 0xc1, 0xad, 0x27, 0x23, 0x3f, 0x00, 0x7f, 0x50, 0xe2,
    0xe6, 0xd6, 0x41, 0x8f, 0x05, 0xc9, 0x0a, 0xb5, 0xb3, 0x5a, 0x22, 0x92,
    0xfe, 0x9d, 0x18, 0x0e, 0x84, 0x8b, 0xcb, 0x32, 0x7a, 0xbc, 0xc2, 0x64,
    0x32, 0xc1, 0x39, 0x71, 0xe6, 0x6e, 0x27, 0x02, 0x88, 0x68, 0xba, 0xeb,
    0x06, 0x87, 0x4f, 0x5b, 0xf8, 0x23, 0x8d, 0xd6, 0x9a, 0xca, 0x41, 0xe5,
    0x4f, 0x24, 0x02, 0xe8, 0x7d, 0x81, 0x4d, 0xd0, 0xdb, 0x70, 0x94, 0xdd,
    0xa5, 0xf9, 0x5e, 0x40, 0x8d, 0x15, 0xc5, 0x8d, 0x62, 0x6c, 0x07, 0x3f,
    0xae, 0x51, 0x44, 0xa3, 0x11, 0xc8, 0x83, 0x55, 0x0a, 0x73, 0x0f, 0xaa,
    0x84, 0xff, 0xa8, 0xb1, 0x8c, 0xeb, 0x64, 0x40, 0x6b, 0x09, 0x17, 0x23,
    0xf0, 0xbb, 0x7c, 0xaf, 0x87, 0x1f, 0x4d, 0x04, 0x95, 0x0c, 0x00, 0x30,
    0xfc, 0xea, 0x26, 0x08, 0x67, 0xbb, 0xb5, 0x47, 0xa0, 0x3a, 0xd4, 0xee,
    0xda, 0xb1, 0x0f, 0x2b, 0x0a, 0xbc, 0x80, 0xbc, 0x69, 0xec, 0x3c, 0x78,
    0xfe, 0x0e, 0x81, 0xf4, 0x69, 0xb7, 0xe2, 0x8b, 0xe3, 0x01, 0xc2, 0xb3,
    0x08, 0x54, 0x01, 0x11, 0xe6, 0x16, 0x43, 0xcc, 0x2d, 0x40, 0x1f, 0x32,
    0x05, 0x20, 0xb9, 0x38, 0x02, 0x18, 0x6b, 0x6d, 0x8c, 0x5c, 0x79, 0xe1,
    0x62, 0x80, 0xd4, 0xb2, 0xdf, 0xf9, 0x13, 0xc6, 0xa7, 0x6f, 0x99, 0x33,
    0x95, 0x58, 0x82, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x4c, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0x93, 0x31, 0x4b, 0xc3,
    0x40, 0x18, 0x86, 0x9f, 0x48, 0x86, 0x1b, 0x3b, 0x54, 0xa8, 0xa3, 0x9b,
    0x15, 0x1d, 0x22, 0x38, 0xd8, 0xb1, 0x4e, 0xed, 0x2a, 0x2e, 0x05, 0x5d,
    0x04, 0x41, 0x42, 0xa7, 0x6e, 0x72, 0x64, 0x28, 0xf9, 0x1b, 0x9d, 0x9d,
    0xc4, 0xa1, 0x10, 0x07, 0xa1, 0x63, 0xbb, 0xd9, 0xb1, 0x83, 0x42, 0x17,
    0xe1, 0x32, 0x04, 0x72, 0xa0, 0x90, 0x1b, 0x02, 0x71, 0xa8, 0x85, 0x96,
    0xb4, 0x35, 0xda, 0x83, 0x5b, 0xbe, 0xef, 0xbd, 0x87, 0xf7, 0xfd, 0xee,
    0xce, 0x1a, 0x8e, 0x86, 0x6c, 0xb3, 0xec, 0xa2, 0xc2, 0x4e, 0xdb, 0xcd,
    0x0e, 0x8f, 0x4f, 0x50, 0xa1, 0x42, 0x7a, 0xd2, 0x9a, 0xd7, 0x77, 0x8a,
    0x1c, 0x96, 0x9e, 0xcc, 0x6e, 0x6e, 0x5d, 0x2a, 0x95, 0x0a, 0x4a, 0xa9,
    0xbf, 0x39, 0xf0, 0xbb, 0x7e, 0xd6, 0x69, 0x77, 0x30, 0xa9, 0x41, 0x47,
    0x21, 0xbd, 0x5d, 0x85, 0x59, 0xe8, 0x6f, 0x74, 0xe0, 0x77, 0xfd, 0x4c,
    0xde, 0x4b, 0x84, 0x10, 0x08, 0x63, 0x70, 0xdf, 0x7a, 0x38, 0x84, 0x4b,
    0x9a, 0xb5, 0x00, 0xe9, 0xc9, 0xcc, 0xbd, 0x73, 0x49, 0x92, 0x04, 0x8c,
    0xa6, 0xf6, 0xe2, 0x23, 0x3e, 0xa6, 0x39, 0xdd, 0xca, 0x08, 0xd2, 0x93,
    0x59, 0xeb, 0xb2, 0x85, 0x31, 0x06, 0xbe, 0x34, 0xcd, 0x6b, 0x1f, 0x52,
    0x85, 0x69, 0x08, 0x44, 0x6a, 0x96, 0xb4, 0x2b, 0x1d, 0x38, 0x47, 0x0e,
    0x5a, 0x6b, 0xf6, 0x9f, 0x06, 0x34, 0x5b, 0x43, 0x48, 0xeb, 0x40, 0x15,
    0xf1, 0x2c, 0x8a, 0x39, 0x50, 0xa1, 0xe2, 0x42, 0x8f, 0x71, 0x1e, 0x2a,
    0x50, 0xae, 0xcf, 0x8a, 0x51, 0x0c, 0x4c, 0x30, 0xf6, 0x32, 0x64, 0x25,
    0x20, 0x8c, 0x42, 0x1e, 0xd5, 0x94, 0x33, 0x12, 0x88, 0xc6, 0x3f, 0xd5,
    0x59, 0xfe, 0x42, 0x11, 0xfc, 0xae, 0x6f, 0xf5, 0xc2, 0x98, 0xf3, 0x83,
    0x10, 0xec, 0xc1, 0x6c, 0x33, 0x81, 0x92, 0xce, 0x69, 0xd7, 0xde, 0x42,
    0xd0, 0x0f, 0xac, 0xd7, 0x28, 0xa6, 0x56, 0x9e, 0x62, 0xae, 0x0c, 0xa6,
    0x61, 0xe0, 0x34, 0xaf, 0xdb, 0xf8, 0x0e, 0x82, 0x7e, 0x60, 0x4d, 0x52,
    0xc1, 0x5e, 0x3f, 0x46, 0xdb, 0xf9, 0x01, 0xfe, 0x0a, 0x98, 0x43, 0x00,
    0xaa, 0x23, 0x18, 0x7f, 0xfe, 0x03, 0xb0, 0x08, 0xa9, 0xbf, 0x97, 0x08,
    0x54, 0x69, 0xa9, 0x67, 0x6d, 0xfb, 0x9d, 0xbf, 0x01, 0x76, 0x9d, 0x83,
    0x16, 0x06, 0x54, 0x3f, 0x85, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x40, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0x93, 0x31, 0x4b, 0xc3,
    0x50, 0x10, 0x80, 0xbf, 0x96, 0x0e, 0x6f, 0x88, 0xd0, 0x40, 0x87, 0x04,
    0xba, 0x64, 0x14, 0x5c, 0xb2, 0x76, 0xac, 0x9b, 0xa3, 0xa0, 0x83, 0x83,
    0x83, 0xc5, 0x29, 0x38, 0x15, 0x9c, 0x8a, 0x83, 0x84, 0x6e, 0xc5, 0x45,
    0xdd, 0xba, 0xea, 0xa4, 0x0e, 0x42, 0x7e, 0x42, 0x75, 0xd2, 0xad, 0x11,
    0x14, 0xba, 0x14, 0x92, 0xa1, 0xd0, 0x0e, 0x81, 0x1e, 0x58, 0xa8, 0x43,
    0x44, 0xda, 0x26, 0x6d, 0x2a, 0xbd, 0xe9, 0xee, 0xe0, 0xfb, 0xb8, 0xc7,
    0xdd, 0xcb, 0x75, 0x5e, 0x3a, 0x6c, 0x12, 0x85, 0xd9, 0xc2, 0x6d, 0xba,
    0x53, 0xb3, 0x64, 0xd2, 0xf5, 0xbb, 0xb4, 0xae, 0x5a, 0xb9, 0x75, 0x04,
    0xf9, 0xd9, 0x22, 0x08, 0x02, 0x8c, 0xb2, 0x41, 0xed, 0xa4, 0x86, 0x7b,
    0xd1, 0x98, 0xfe, 0x5b, 0xd0, 0x0e, 0x03, 0xf4, 0x2d, 0x1d, 0xbd, 0xa4,
    0xe3, 0x9c, 0xd5, 0x71, 0x9b, 0x6e, 0xa6, 0x64, 0x4e, 0x60, 0x0f, 0x42,
    0x9c, 0xbb, 0x1b, 0x54, 0x24, 0x28, 0x4d, 0xd1, 0x38, 0x6f, 0x64, 0x4a,
    0xf2, 0x8b, 0x0d, 0xf5, 0xd1, 0xa3, 0x72, 0xeb, 0x42, 0x24, 0x8c, 0xbf,
    0xc7, 0x38, 0xa7, 0xce, 0xca, 0xe7, 0x24, 0x04, 0xa2, 0x29, 0x8a, 0xaf,
    0x16, 0xd5, 0x43, 0x0f, 0xe9, 0x87, 0x88, 0x08, 0xfb, 0x07, 0x47, 0x4b,
    0x25, 0xc9, 0x09, 0x06, 0x55, 0x28, 0xd8, 0x20, 0x15, 0xf6, 0x8e, 0xc1,
    0x7a, 0xf2, 0x19, 0x45, 0x23, 0xb6, 0x77, 0xec, 0xd4, 0x09, 0xe6, 0xd6,
    0x28, 0x9a, 0x42, 0x09, 0x30, 0x31, 0xc1, 0x88, 0x01, 0xfb, 0x7e, 0x88,
    0x0c, 0x1e, 0xb9, 0x2e, 0x19, 0xd9, 0x02, 0x15, 0xc9, 0x6f, 0x37, 0x80,
    0xf0, 0xfd, 0x2f, 0x7f, 0xf8, 0x0c, 0x18, 0xa5, 0xe2, 0x0b, 0x82, 0x38,
    0x7a, 0x30, 0x01, 0x54, 0x8c, 0xec, 0x1a, 0x1e, 0x6f, 0xd1, 0x10, 0xef,
    0xb2, 0x9d, 0x7a, 0x58, 0x49, 0x81, 0xf2, 0x11, 0xad, 0x07, 0x65, 0x93,
    0xea, 0x57, 0x80, 0x1f, 0x29, 0xbc, 0x67, 0x6f, 0xe9, 0x55, 0xa6, 0x4c,
    0x00, 0x52, 0x50, 0x58, 0xfd, 0x21, 0xa8, 0xd5, 0x30, 0xa4, 0x6c, 0xc1,
    0x07, 0xac, 0x49, 0x9c, 0x67, 0xc1, 0x09, 0x81, 0xa7, 0x19, 0x54, 0xb4,
    0xe2, 0xda, 0x30, 0x40, 0x6e, 0xd3, 0xef, 0xfc, 0x03, 0xb2, 0xe2, 0x72,
    0x82, 0xef, 0x16, 0x9b, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image3_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x48, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0x93, 0xb1, 0x4b, 0x42,
    0x51, 0x14, 0xc6, 0x7f, 0x2f, 0x1c, 0x6e, 0xd0, 0xe0, 0xd0, 0xf0, 0xdc,
    0x12, 0x0a, 0x52, 0x68, 0xd0, 0x2d, 0xa1, 0xa5, 0xb5, 0x29, 0xa3, 0x7f,
    0x20, 0xa7, 0x70, 0x0a, 0x37, 0x79, 0x34, 0xc8, 0xc5, 0x29, 0xda, 0x5a,
    0x0a, 0x97, 0x86, 0x96, 0x68, 0x12, 0x1c, 0x5d, 0x04, 0x5b, 0x02, 0x87,
    0x02, 0x1d, 0x04, 0x87, 0x84, 0xfb, 0x36, 0xef, 0x20, 0x78, 0x86, 0xe0,
    0x35, 0xa8, 0x91, 0x69, 0xf5, 0xc4, 0xbb, 0x5c, 0x38, 0xe7, 0xbb, 0xbf,
    0xf3, 0x7d, 0x1c, 0xae, 0xd3, 0x7c, 0x6e, 0xb2, 0xca, 0x89, 0x84, 0x15,
    0x16, 0x2e, 0x0a, 0x41, 0x72, 0x2f, 0x89, 0xf1, 0x0d, 0x5e, 0xd1, 0x73,
    0xa6, 0xf5, 0xb5, 0x30, 0x8f, 0x75, 0x49, 0x07, 0xb9, 0xb3, 0x1c, 0xae,
    0xeb, 0x62, 0x8c, 0x59, 0xce, 0x81, 0x2e, 0xeb, 0x20, 0x7f, 0x9e, 0x47,
    0x3e, 0x04, 0x6b, 0x2d, 0xc6, 0x56, 0x00, 0xf9, 0xea, 0xff, 0xe9, 0x40,
    0x97, 0x75, 0xe0, 0x15, 0x3d, 0xd4, 0x86, 0x42, 0x86, 0x8a, 0x9b, 0xdb,
    0x3c, 0x7e, 0x37, 0x15, 0xce, 0x81, 0x2e, 0x8d, 0x27, 0x8f, 0x46, 0x23,
    0x64, 0xb8, 0xce, 0xd5, 0x75, 0x9a, 0x5e, 0x57, 0xcd, 0xe9, 0x16, 0x02,
    0x74, 0x49, 0x07, 0xd9, 0xe3, 0x2c, 0x22, 0x82, 0xb5, 0x90, 0x6b, 0x1d,
    0x22, 0x3b, 0xa0, 0x3a, 0x82, 0x88, 0xfa, 0x1f, 0x90, 0xd8, 0x4d, 0x60,
    0x87, 0x96, 0xba, 0x4d, 0xf3, 0xb0, 0x9d, 0x82, 0x03, 0xe0, 0x0d, 0x04,
    0x05, 0x8f, 0x21, 0x1c, 0x18, 0xdf, 0xd0, 0xea, 0x9c, 0x50, 0x3f, 0x4d,
    0xe1, 0x4e, 0x22, 0xfb, 0x16, 0x78, 0x05, 0xa5, 0x64, 0x46, 0xbb, 0x10,
    0x60, 0xad, 0xa5, 0xf7, 0xfe, 0x04, 0xfd, 0x7d, 0xfc, 0xd6, 0xa4, 0xd8,
    0x1f, 0x5f, 0x3f, 0x23, 0x2c, 0xdc, 0x82, 0x77, 0xe9, 0x39, 0x03, 0xbf,
    0x42, 0xfc, 0xfe, 0x08, 0xd5, 0x00, 0xd5, 0x18, 0x4f, 0xa7, 0x37, 0xaf,
    0xfd, 0x75, 0x8d, 0xb5, 0x6a, 0xcd, 0x19, 0xd8, 0x26, 0xdc, 0x65, 0x88,
    0x55, 0x05, 0x55, 0x15, 0x78, 0x59, 0x02, 0x30, 0x85, 0x28, 0xd5, 0x66,
    0x60, 0x63, 0x73, 0xd9, 0x43, 0x01, 0xa6, 0x10, 0x00, 0x22, 0x71, 0xa0,
    0xbd, 0x3c, 0xe0, 0x3b, 0x24, 0xba, 0x99, 0x21, 0xba, 0x55, 0x9b, 0xe9,
    0x39, 0xab, 0x7e, 0xe7, 0x4f, 0x43, 0x4e, 0x7f, 0xd4, 0x3c, 0x36, 0xef,
    0x6c, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
    0x82
};


/*
 *  Constructs a Dlg_Calendar as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 *
 *  The dialog will by default be modeless, unless you set 'modal' to
 *  TRUE to construct a modal dialog.
 */
Dlg_Calendar::Dlg_Calendar( QWidget* parent, const char* name, bool modal, WFlags fl )
    : QDialog( parent, name, modal, fl )
{
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    img.loadFromData( image2_data, sizeof( image2_data ), "PNG" );
    image2 = img;
    img.loadFromData( image3_data, sizeof( image3_data ), "PNG" );
    image3 = img;
    if ( !name )
	setProperty( "name", "Dlg_Calendar" );
    Dlg_CalendarLayout = new QGridLayout( this, 1, 1, 2, 2, "Dlg_CalendarLayout"); 

    layout1 = new QGridLayout( 0, 1, 1, 0, 6, "layout1"); 

    layout2 = new QGridLayout( 0, 1, 1, 0, 6, "layout2"); 

    pushButtonMonthPlus = new QPushButton( this, "pushButtonMonthPlus" );
    pushButtonMonthPlus->setProperty( "maximumSize", QSize( 25, 20 ) );
    QFont pushButtonMonthPlus_font(  pushButtonMonthPlus->font() );
    pushButtonMonthPlus->setFont( pushButtonMonthPlus_font ); 
    pushButtonMonthPlus->setProperty( "autoDefault", QVariant( FALSE, 0 ) );
    pushButtonMonthPlus->setProperty( "iconSet", QIconSet( image0 ) );
    pushButtonMonthPlus->setProperty( "flat", QVariant( TRUE, 0 ) );

    layout2->addWidget( pushButtonMonthPlus, 0, 5 );

    pushButtonYearMoins = new QPushButton( this, "pushButtonYearMoins" );
    pushButtonYearMoins->setProperty( "maximumSize", QSize( 25, 20 ) );
    QFont pushButtonYearMoins_font(  pushButtonYearMoins->font() );
    pushButtonYearMoins->setFont( pushButtonYearMoins_font ); 
    pushButtonYearMoins->setProperty( "autoDefault", QVariant( FALSE, 0 ) );
    pushButtonYearMoins->setProperty( "iconSet", QIconSet( image1 ) );
    pushButtonYearMoins->setProperty( "flat", QVariant( TRUE, 0 ) );

    layout2->addWidget( pushButtonYearMoins, 0, 0 );

    cMaskedLineEditDate = new CMaskedLineEdit( this, "cMaskedLineEditDate" );
    cMaskedLineEditDate->setProperty( "minimumSize", QSize( 100, 0 ) );
    QFont cMaskedLineEditDate_font(  cMaskedLineEditDate->font() );
    cMaskedLineEditDate->setFont( cMaskedLineEditDate_font ); 
    cMaskedLineEditDate->setProperty( "carMask", 32 );

    layout2->addWidget( cMaskedLineEditDate, 0, 2 );

    comboBoxAn = new QComboBox( FALSE, this, "comboBoxAn" );
    comboBoxAn->setProperty( "maximumSize", QSize( 3000, 20 ) );
    QFont comboBoxAn_font(  comboBoxAn->font() );
    comboBoxAn->setFont( comboBoxAn_font ); 
    comboBoxAn->setProperty( "editable", QVariant( TRUE, 0 ) );
    comboBoxAn->setProperty( "sizeLimit", 25 );

    layout2->addWidget( comboBoxAn, 0, 4 );

    pushButtonYearPlus = new QPushButton( this, "pushButtonYearPlus" );
    pushButtonYearPlus->setProperty( "maximumSize", QSize( 25, 20 ) );
    QFont pushButtonYearPlus_font(  pushButtonYearPlus->font() );
    pushButtonYearPlus->setFont( pushButtonYearPlus_font ); 
    pushButtonYearPlus->setProperty( "autoDefault", QVariant( FALSE, 0 ) );
    pushButtonYearPlus->setProperty( "iconSet", QIconSet( image2 ) );
    pushButtonYearPlus->setProperty( "flat", QVariant( TRUE, 0 ) );

    layout2->addWidget( pushButtonYearPlus, 0, 6 );

    comboBoxMois = new QComboBox( FALSE, this, "comboBoxMois" );
    comboBoxMois->setProperty( "maximumSize", QSize( 3000, 20 ) );
    QFont comboBoxMois_font(  comboBoxMois->font() );
    comboBoxMois->setFont( comboBoxMois_font ); 
    comboBoxMois->setProperty( "editable", QVariant( FALSE, 0 ) );
    comboBoxMois->setProperty( "sizeLimit", 12 );

    layout2->addWidget( comboBoxMois, 0, 3 );

    pushButtonMonthMoins = new QPushButton( this, "pushButtonMonthMoins" );
    pushButtonMonthMoins->setProperty( "maximumSize", QSize( 25, 20 ) );
    QFont pushButtonMonthMoins_font(  pushButtonMonthMoins->font() );
    pushButtonMonthMoins->setFont( pushButtonMonthMoins_font ); 
    pushButtonMonthMoins->setProperty( "autoDefault", QVariant( FALSE, 0 ) );
    pushButtonMonthMoins->setProperty( "iconSet", QIconSet( image3 ) );
    pushButtonMonthMoins->setProperty( "flat", QVariant( TRUE, 0 ) );

    layout2->addWidget( pushButtonMonthMoins, 0, 1 );

    layout1->addLayout( layout2, 0, 0 );

    layout3 = new QHBoxLayout( 0, 0, 6, "layout3"); 

    pushButtonMenu = new QPushButton( this, "pushButtonMenu" );
    pushButtonMenu->setProperty( "maximumSize", QSize( 200, 25 ) );
    layout3->addWidget( pushButtonMenu );
    spacer1 = new QSpacerItem( 10, 10, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout3->addItem( spacer1 );

    textLabel_Heure = new QLabel( this, "textLabel_Heure" );
    QFont textLabel_Heure_font(  textLabel_Heure->font() );
    textLabel_Heure->setFont( textLabel_Heure_font ); 
    textLabel_Heure->setProperty( "alignment", int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    layout3->addWidget( textLabel_Heure );

    timeEdit_Heure = new QTimeEdit( this, "timeEdit_Heure" );
    timeEdit_Heure->setProperty( "maximumSize", QSize( 145, 32767 ) );
    QFont timeEdit_Heure_font(  timeEdit_Heure->font() );
    timeEdit_Heure->setFont( timeEdit_Heure_font ); 
    layout3->addWidget( timeEdit_Heure );

    layout1->addLayout( layout3, 1, 0 );

    Dlg_CalendarLayout->addLayout( layout1, 0, 0 );
    languageChange();
    resize( QSize(377, 212).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( pushButtonMonthMoins, SIGNAL( clicked() ), this, SLOT( pushButtonMonthMoins_clicked() ) );
    connect( pushButtonYearMoins, SIGNAL( clicked() ), this, SLOT( pushButtonYearMoins_clicked() ) );
    connect( comboBoxMois, SIGNAL( activated(const QString&) ), this, SLOT( comboBoxMois_activated(const QString&) ) );
    connect( comboBoxAn, SIGNAL( textChanged(const QString&) ), this, SLOT( comboBoxAn_textChanged(const QString&) ) );
    connect( comboBoxAn, SIGNAL( activated(const QString&) ), this, SLOT( comboBoxAn_activated(const QString&) ) );
    connect( pushButtonMonthPlus, SIGNAL( clicked() ), this, SLOT( pushButtonMonthPlus_clicked() ) );
    connect( pushButtonYearPlus, SIGNAL( clicked() ), this, SLOT( pushButtonYearPlus_clicked() ) );
    init();
}

/*
 *  Destroys the object and frees any allocated resources
 */
Dlg_Calendar::~Dlg_Calendar()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void Dlg_Calendar::languageChange()
{
    setProperty( "caption", tr( "Date" ) );
    pushButtonMonthPlus->setProperty( "text", QString::null );
    QToolTip::add( pushButtonMonthPlus, tr( "Ajouter un mois" ) );
    pushButtonYearMoins->setProperty( "text", QString::null );
    QToolTip::add( pushButtonYearMoins, trUtf8( "\x45\x6e\x6c\x65\x76\x65\x72\x20\x75\x6e\x65\x20\x61\x6e\x6e\xc3\xa9\x65" ) );
    cMaskedLineEditDate->setProperty( "control", tr( "GGGGGGGG" ) );
    cMaskedLineEditDate->setProperty( "mask", tr( "__-__-____" ) );
    cMaskedLineEditDate->setProperty( "text", QString::null );
    comboBoxAn->clear();
    comboBoxAn->insertItem( tr( "1990" ) );
    comboBoxAn->insertItem( tr( "1991" ) );
    comboBoxAn->insertItem( tr( "1992" ) );
    comboBoxAn->insertItem( tr( "1993" ) );
    comboBoxAn->insertItem( tr( "1994" ) );
    comboBoxAn->insertItem( tr( "1995" ) );
    comboBoxAn->insertItem( tr( "1996" ) );
    comboBoxAn->insertItem( tr( "1997" ) );
    comboBoxAn->insertItem( tr( "1998" ) );
    comboBoxAn->insertItem( tr( "1999" ) );
    comboBoxAn->insertItem( tr( "2000" ) );
    comboBoxAn->insertItem( tr( "2001" ) );
    comboBoxAn->insertItem( tr( "2002" ) );
    comboBoxAn->insertItem( tr( "2003" ) );
    comboBoxAn->insertItem( tr( "2004" ) );
    comboBoxAn->insertItem( tr( "2005" ) );
    comboBoxAn->insertItem( tr( "2006" ) );
    comboBoxAn->insertItem( tr( "2007" ) );
    comboBoxAn->insertItem( tr( "2008" ) );
    comboBoxAn->insertItem( tr( "2009" ) );
    comboBoxAn->insertItem( tr( "2010" ) );
    pushButtonYearPlus->setProperty( "text", QString::null );
    QToolTip::add( pushButtonYearPlus, trUtf8( "\x41\x6a\x6f\x75\x74\x65\x72\x20\x75\x6e\x65\x20\x61\x6e\x6e\xc3\xa9\x65" ) );
    comboBoxMois->clear();
    comboBoxMois->insertItem( tr( "Janvier" ) );
    comboBoxMois->insertItem( trUtf8( "\x46\xc3\xa9\x76\x72\x69\x65\x72" ) );
    comboBoxMois->insertItem( tr( "Mars" ) );
    comboBoxMois->insertItem( tr( "Avril" ) );
    comboBoxMois->insertItem( tr( "Mai" ) );
    comboBoxMois->insertItem( tr( "Juin" ) );
    comboBoxMois->insertItem( tr( "Juillet" ) );
    comboBoxMois->insertItem( trUtf8( "\x41\x6f\xc3\xbb\x74" ) );
    comboBoxMois->insertItem( tr( "Septembre" ) );
    comboBoxMois->insertItem( tr( "Octobre" ) );
    comboBoxMois->insertItem( tr( "Novembre" ) );
    comboBoxMois->insertItem( trUtf8( "\x44\xc3\xa9\x63\x65\x6d\x62\x72\x65" ) );
    pushButtonMonthMoins->setProperty( "text", QString::null );
    QToolTip::add( pushButtonMonthMoins, tr( "Enlever un mois" ) );
    pushButtonMenu->setProperty( "text", trUtf8( "\x50\x72\xc3\xa9\x73\xc3\xa9\x6c\x65\x63\x74\x69\x6f\x6e\x20\x64\x65\x20\x64\x61\x74"
    "\x65\x73" ) );
    QToolTip::add( pushButtonMenu, trUtf8( "\x4d\x65\x6e\x75\x20\x64\xc3\xa9\x72\x6f\x75\x6c\x61\x6e\x74\x20\x64\x65\x20\x63\x68"
    "\x6f\x69\x78\x20\x64\x65\x20\x64\x61\x74\x65\x73\x20\x70\x72\xc3\xa9\xc3\xa9\x74"
    "\x61\x62\x6c\x69\x65\x73" ) );
    textLabel_Heure->setProperty( "text", tr( "Heure : " ) );
}

